<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title><%= title %></title>  <link rel="stylesheet" href="/css/styles.css">  
  <link rel="stylesheet" href="/css/nouislider.min.css">
  <link rel="stylesheet" href="/css/nouislider-overrides.css">
  <link rel="stylesheet" href="/css/time-slider-custom.css">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
  <style>
    @import url('https://fonts.googleapis.com/css2?family=Poppins:wght@400;600;800&family=Righteous&display=swap');
    
    body {
      font-family: 'Poppins', sans-serif;
      background: linear-gradient(45deg, #ff3b5c, #ff713e, #ffb92a, #5f8fff, #7d4cdb);
      background-size: 400% 400%;
      animation: gradientBG 15s ease infinite;
      color: #fff;
      margin: 0;
      padding: 0;
      min-height: 100vh;
    }
    
    @keyframes gradientBG {
      0% { background-position: 0% 50% }
      50% { background-position: 100% 50% }
      100% { background-position: 0% 50% }
    }
    
    .container {
      max-width: 1200px;
      margin: 0 auto;
      padding: 20px;
    }
    
    header {
      text-align: center;
      padding: 30px 0;
    }
    
    h1 {
      font-family: 'Righteous', cursive;
      font-size: 2.5rem;
      margin-bottom: 10px;
      color: #fff;
      text-shadow: 3px 3px 0px rgba(0, 0, 0, 0.2);
    }
    
    p.subtitle {
      font-size: 1.2rem;
      margin-bottom: 30px;
      opacity: 0.9;
    }
    
    .choreographies-container {
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
      gap: 25px;
      margin: 30px auto;
      animation: fadeIn 0.6s ease-out;
    }
    
    @keyframes fadeIn {
      from { opacity: 0; transform: translateY(20px); }
      to { opacity: 1; transform: translateY(0); }
    }
    
    .choreography {
      background: rgba(0, 0, 0, 0.6);
      border-radius: 15px;
      overflow: hidden;
      transition: all 0.3s ease;
      backdrop-filter: blur(10px);
      border: 1px solid rgba(255, 255, 255, 0.1);
      box-shadow: 0 8px 20px rgba(0, 0, 0, 0.2);
      display: flex;
      flex-direction: column;
      height: 100%;
    }
    
    .choreography:hover {
      transform: translateY(-10px);
      box-shadow: 0 15px 30px rgba(0, 0, 0, 0.3);
      border-color: rgba(255, 255, 255, 0.3);
    }
    
    .thumbnail-container {
      position: relative;
      width: 100%;
      padding-top: 56.25%; /* 16:9 aspect ratio */
      overflow: hidden;
    }
    
    .choreography-thumbnail {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      object-fit: cover;
      transition: transform 0.5s ease;
    }
    
    .choreography:hover .choreography-thumbnail {
      transform: scale(1.1);
    }
    
    .thumbnail-overlay {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: linear-gradient(0deg, rgba(0,0,0,0.8) 0%, rgba(0,0,0,0) 50%);
      opacity: 0.7;
      transition: opacity 0.3s ease;
    }
    
    .choreography:hover .thumbnail-overlay {
      opacity: 0.9;
    }
    
    .play-icon {
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      width: 60px;
      height: 60px;
      background: rgba(255, 255, 255, 0.2);
      border-radius: 50%;
      display: flex;
      justify-content: center;
      align-items: center;
      opacity: 0;
      transition: all 0.3s ease;
      border: 2px solid white;
    }
    
    .play-icon i {
      font-size: 24px;
      color: white;
    }
    
    .choreography:hover .play-icon {
      opacity: 1;
      transform: translate(-50%, -50%) scale(1.1);
    }
    
    .choreography-info {
      padding: 20px;
      text-align: left;
      flex-grow: 1;
      display: flex;
      flex-direction: column;
    }
    
    .choreography-title {
      font-weight: 600;
      font-size: 1.1rem;
      margin-bottom: 10px;
      color: #fff;
      line-height: 1.4;      display: -webkit-box;
      -webkit-line-clamp: 2;
      line-clamp: 2;
      -webkit-box-orient: vertical;
      overflow: hidden;
    }
    
    .choreography-actions {
      display: flex;
      gap: 10px;
      margin-top: 15px;
    }
    
    .btn {
      padding: 10px 15px;
      border-radius: 30px;
      text-decoration: none;
      font-weight: 600;
      font-size: 0.9rem;
      display: inline-flex;
      align-items: center;
      justify-content: center;
      flex: 1;
      transition: all 0.3s ease;
      position: relative;
      overflow: hidden;
      cursor: pointer;
      border: none;
    }
    
    .btn i {
      margin-right: 5px;
    }
    
    .btn-play {
      background: linear-gradient(45deg, #ff3b5c, #ff713e);
      color: #fff;
    }
    
    .btn-select {
      background: linear-gradient(45deg, #5f8fff, #7d4cdb);
      color: #fff;
    }
    
    .btn:hover {
      transform: translateY(-3px);
      box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
    }
    
    .btn:before {
      content: '';
      position: absolute;
      top: 0;
      left: -100%;
      width: 100%;
      height: 100%;
      background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
      transition: all 0.4s;
    }
    
    .btn:hover:before {
      left: 100%;
    }
    
    .message {
      background: rgba(0, 0, 0, 0.6);
      padding: 30px;
      border-radius: 15px;
      margin: 40px auto;
      max-width: 600px;
      text-align: center;
      backdrop-filter: blur(10px);
      border: 1px solid rgba(255, 255, 255, 0.1);
      box-shadow: 0 8px 20px rgba(0, 0, 0, 0.2);
    }
    
    .message i {
      font-size: 3rem;
      margin-bottom: 20px;
      display: block;
      animation: pulse 2s infinite;
    }
    
    @keyframes pulse {
      0% { transform: scale(1); }
      50% { transform: scale(1.05); }
      100% { transform: scale(1); }
    }
    
    .back-link {
      display: inline-block;
      padding: 10px 20px;
      color: white;
      text-decoration: none;
      background: rgba(0, 0, 0, 0.3);
      border-radius: 30px;
      margin-top: 20px;
      transition: all 0.3s ease;
    }
    
    .back-link i {
      margin-right: 5px;
    }
    
    .back-link:hover {
      background: rgba(0, 0, 0, 0.5);
      transform: translateX(-5px);
    }
    
    /* Time range modal */
    .time-range-modal {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: rgba(0, 0, 0, 0.8);
      display: none;
      justify-content: center;
      align-items: center;
      z-index: 1000;
    }
    
    .modal-content {
      background: rgba(30, 30, 30, 0.9);
      width: 90%;
      max-width: 500px;
      padding: 30px;
      border-radius: 15px;
      box-shadow: 0 15px 30px rgba(0, 0, 0, 0.3);
      backdrop-filter: blur(10px);
      border: 1px solid rgba(255, 255, 255, 0.1);
      position: relative;
    }
    
    .close-modal {
      position: absolute;
      top: 15px;
      right: 15px;
      font-size: 1.5rem;
      color: rgba(255, 255, 255, 0.7);
      cursor: pointer;
      transition: all 0.3s ease;
    }
    
    .close-modal:hover {
      color: #fff;
      transform: rotate(90deg);
    }
    
    .modal-title {
      font-size: 1.4rem;
      margin-bottom: 20px;
      color: #fff;
      text-align: center;
      font-weight: 600;
    }
    
    .time-range-slider {
      margin: 40px 0;
      height: 10px;
    }
    
    .time-labels {
      display: flex;
      justify-content: space-between;
      margin-bottom: 30px;
      color: rgba(255, 255, 255, 0.8);
      font-size: 0.9rem;
    }
    
    .selected-range {
      background: rgba(255, 255, 255, 0.1);
      padding: 15px;
      border-radius: 10px;
      text-align: center;
      margin: 20px 0;
    }
    
    .selected-range p {
      margin: 0;
      color: rgba(255, 255, 255, 0.8);
    }
    
    .selected-range span {
      font-weight: bold;
      color: #ff713e;
      font-size: 1.1rem;
    }
    
    .modal-buttons {
      display: flex;
      gap: 15px;
      margin-top: 30px;
    }
    
    .modal-btn {
      flex: 1;
      padding: 12px 0;
      border-radius: 8px;
      border: none;
      cursor: pointer;
      font-weight: 600;
      font-size: 1rem;
      transition: all 0.3s ease;
      font-family: 'Poppins', sans-serif;
    }
    
    .btn-confirm {
      background: linear-gradient(45deg, #ff3b5c, #ff713e);
      color: #fff;
    }
    
    .btn-cancel {
      background: rgba(255, 255, 255, 0.1);
      color: #fff;
    }
    
    .modal-btn:hover {
      transform: translateY(-3px);
      box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
    }
    
    /* noUiSlider custom styling */
    .noUi-connect {
      background: linear-gradient(to right, #ff3b5c, #ff713e);
    }
    
    .noUi-handle {
      border-radius: 50%;
      background: #fff;
      box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);
    }
    
    .noUi-handle:before, .noUi-handle:after {
      display: none;
    }    /* Add YouTube Video Player Modal */
    .modal {
      display: none;
      position: fixed;
      z-index: 2000;
      left: 0;
      top: 0;
      width: 100%;
      height: 100%;
      overflow: auto;
      background-color: rgba(0,0,0,0.9);
      backdrop-filter: blur(5px);
    }
    
    .modal .modal-content {
      background-color: rgba(20, 20, 20, 0.9);
      margin: 5% auto;
      padding: 0;
      width: 90%;
      max-width: 800px;
      border-radius: 15px;
      box-shadow: 0 15px 30px rgba(0, 0, 0, 0.3);
      position: relative;
      overflow: hidden;
    }
    
    /* Specific styles for time-range modal */
    .time-range-modal .modal-content {
      background: rgba(30, 30, 30, 0.9);
      width: 90%;
      max-width: 500px;
      padding: 30px;
    }
    
    .close-modal-btn {
      position: absolute;
      right: 15px;
      top: 15px;
      z-index: 2010;
      color: #fff;
      font-size: 28px;
      cursor: pointer;
      width: 32px;
      height: 32px;
      text-align: center;
      line-height: 32px;
      background: rgba(0,0,0,0.5);
      border-radius: 50%;
    }
    
    .video-container {
      position: relative;
      padding-bottom: 56.25%; /* 16:9 aspect ratio */
      height: 0;
      overflow: hidden;
    }
    
    #youtube-iframe {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      border: none;
    }
  </style>
</head>
<body>
  <div class="container">
    <header>
      <h1><%= title %></h1>
      <% if (choreographies && choreographies.length > 0) { %>
        <p class="subtitle">Select a choreography to practice and get rated!</p>
      <% } %>
    </header>
    
    <% if (choreographies && choreographies.length > 0) { %>
      <div class="choreographies-container">
        <% choreographies.forEach(choreography => { %>
          <div class="choreography" data-video-id="<%= choreography.videoId %>">
            <div class="thumbnail-container">
              <img src="<%= choreography.thumbnail %>" alt="<%= choreography.title %>" class="choreography-thumbnail">
              <div class="thumbnail-overlay"></div>
              <div class="play-icon">
                <i class="fas fa-play"></i>
              </div>
            </div>
            <div class="choreography-info">
              <div class="choreography-title"><%= choreography.title %></div>              <div class="choreography-actions">
                <button class="btn btn-play" onclick="openVideoModal('<%= choreography.videoId %>', '<%= encodeURIComponent(choreography.title) %>')">
                  <i class="fas fa-play"></i> Watch
                </button>
                <button class="btn btn-select" onclick="openTimeRangeModal('<%= choreography.videoId %>', '<%= encodeURIComponent(choreography.title) %>')">
                  <i class="fas fa-check"></i> Select
                </button>
              </div>
            </div>
          </div>
        <% }); %>
      </div>
    <% } else { %>      <div class="message">
        <i class="fas fa-music"></i>
        <h3><%= message || 'No choreographies found!' %></h3>
        <p>Try searching for a different song or check back later.</p>
        <a href="/songs" class="back-link">
          <i class="fas fa-arrow-left"></i> Back to Song Selection
        </a>
      </div>
    <% } %>
      <% if (choreographies && choreographies.length > 0) { %>
      <a href="/songs" class="back-link">
        <i class="fas fa-arrow-left"></i> Back to Song Selection
      </a>
    <% } %>
  </div>
    <!-- YouTube Video Player Modal -->
  <div id="videoPlayerModal" class="modal">
    <div class="modal-content">
      <span class="close-modal-btn" onclick="closeVideoModal()">&times;</span>
      
      <div class="video-container">
        <!-- iframe will be loaded by JavaScript -->
      </div>
      
      <div style="padding: 20px;">
        <h3 id="video-title" style="color: #fff; margin-bottom: 10px; font-size: 1.2rem;">Video Title</h3>
      </div>
    </div>
  </div>
  <!-- Time Range Modal -->
  <div id="timeRangeModal" class="time-range-modal">
    <div class="modal-content">      <span class="close-modal" onclick="closeTimeRangeModal()">&times;</span>      <h2 class="modal-title">Select Your Practice Time Range</h2>
      <p style="text-align: center; margin-bottom: 15px; color: rgba(255,255,255,0.9); font-weight: 500;">Choose a specific section of the choreography to practice</p>      
      <div style="text-align: center; padding: 5px; margin-bottom: 15px; background-color: rgba(255,255,255,0.1); border-radius: 5px;">
        <p style="color: #ffcc00;"><i class="fas fa-info-circle"></i> Interact with the slider below to select your time range</p>
      </div>
      
      <div class="time-labels">
        <div>0:00</div>
        <div>1:30</div>
        <div>3:00</div>
      </div>
      
      <div id="timeRangeSlider" class="time-range-slider"></div>      
      <div class="selected-range">
        <p><span class="range-label">Selected time: </span><span id="selectedRange">0:30 - 1:30</span></p>
        <p class="instruction-text" style="font-size: 1rem; margin-top: 10px; color: #ffcc00; font-weight: 500;"><strong>⬅️ Drag these sliders ➡️</strong> to select the part of the video you want to practice.</p>
      </div>
      
      <div class="modal-buttons">
        <button class="modal-btn btn-cancel" onclick="closeTimeRangeModal()">Cancel</button>
        <button class="modal-btn btn-confirm" onclick="confirmTimeRange()">Confirm</button>
      </div>
    </div>
  </div>
  
  <!-- Add YouTube API with callback -->
  <script>
    // Load the YouTube API asynchronously with error handling
    function loadYouTubeAPI() {
      // Create script element for YouTube API
      const tag = document.createElement('script');
      tag.src = "https://www.youtube.com/iframe_api";
      
      // Handle loading errors
      tag.onerror = function() {
        console.error("Failed to load YouTube API");
        showError("Failed to load YouTube player. Please check your internet connection.");
      };
      
      // Insert the script into the page
      const firstScriptTag = document.getElementsByTagName('script')[0];
      firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);
    }
    
    // YouTube API callback function
    function onYouTubeIframeAPIReady() {
      console.log("YouTube API loaded successfully");
      window.youTubeAPIReady = true;
    }
    
    // Call the API loader on page load
    loadYouTubeAPI();
    
    // Function to show errors to the user
    function showError(message) {
      const errorDiv = document.createElement('div');
      errorDiv.className = 'message';
      errorDiv.style.backgroundColor = "rgba(220, 53, 69, 0.8)";
      errorDiv.style.marginTop = "30px";
      
      errorDiv.innerHTML = `
        <i class="fas fa-exclamation-triangle"></i>
        <h3>Error Loading Videos</h3>
        <p>${message}</p>
        <div style="margin: 20px 0; padding: 15px; background: rgba(0,0,0,0.2); border-radius: 8px;">
          <p style="font-weight: 500;">Try these solutions:</p>
          <ul style="text-align: left; margin: 10px 0 0 20px;">
            <li>Check your internet connection</li>
            <li>Refresh the page</li>
            <li>Try a different browser</li>
            <li>Ensure third-party cookies are enabled</li>
            <li>Check if YouTube is accessible from your location</li>
          </ul>
        </div>
        <a href="/songs" class="back-link">
          <i class="fas fa-arrow-left"></i> Back to Song Selection
        </a>
      `;
      
      const container = document.querySelector('.container');
      // Avoid duplicating error messages
      if (!container.querySelector('.message')) {
        container.appendChild(errorDiv);
      }
    }
  </script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/noUiSlider/14.6.3/nouislider.min.css">
  <link rel="stylesheet" href="/css/nouislider-overrides.css">
  <script src="https://cdnjs.cloudflare.com/ajax/libs/noUiSlider/14.6.3/nouislider.min.js"></script>  <script>    // Variables for video and time range selection
    let selectedVideoId = '';
    let selectedTitle = '';
    let timeRangeStart = 30; // Default start time (30 seconds)
    let timeRangeEnd = 90;   // Default end time (90 seconds)
    
    // Video player modal functions with improved error handling
    function openVideoModal(videoId, title) {
      try {
        console.log("Opening video: ", videoId);
        const iframe = document.getElementById('youtube-iframe');
        const videoTitle = document.getElementById('video-title');
        
        if (!videoId) {
          console.error("No video ID provided");
          showError("Invalid video ID. Please try another choreography.");
          return;
        }
        
        // Add a loading indicator
        const videoContainer = document.querySelector('.video-container');
        videoContainer.innerHTML = `
          <div style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; display: flex; 
                      justify-content: center; align-items: center; background: rgba(0,0,0,0.7);">
            <div style="text-align: center;">
              <div class="spinner" style="border: 5px solid rgba(255,255,255,0.3); 
                   border-top: 5px solid #fff; border-radius: 50%; width: 50px; 
                   height: 50px; animation: spin 1s linear infinite; margin: 0 auto;"></div>
              <p style="color: white; margin-top: 15px;">Loading video...</p>
            </div>
          </div>
        `;
        
        // Add animation for spinner
        const style = document.createElement('style');
        style.textContent = `
          @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
          }
        `;
        document.head.appendChild(style);
        
        // Set timeout for video loading
        window.videoLoadTimeout = setTimeout(() => {
          if (iframe.src && !iframe.dataset.loaded) {
            console.warn("Video load timed out");
            videoContainer.innerHTML = `
              <div style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; display: flex; 
                          flex-direction: column; justify-content: center; align-items: center; background: #111; padding: 20px; text-align: center;">
                <i class="fas fa-exclamation-triangle" style="font-size: 48px; color: #ff713e; margin-bottom: 20px;"></i>
                <h3 style="color: white; margin-bottom: 15px;">Video failed to load</h3>
                <p style="color: rgba(255,255,255,0.7); margin-bottom: 20px;">This could be due to network issues or content restrictions</p>
                <button onclick="closeVideoModal()" class="btn" 
                        style="background: rgba(255,255,255,0.2); color: white; padding: 10px 20px; border: none; border-radius: 20px; cursor: pointer;">
                  Close
                </button>
              </div>
            `;
          }
        }, 15000);
        
        // Create a new iframe to avoid caching issues
        const newIframe = document.createElement('iframe');
        newIframe.id = 'youtube-iframe';
        newIframe.style = "position: absolute; top: 0; left: 0; width: 100%; height: 100%; border: none;";
        newIframe.allow = "accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture";
        newIframe.allowFullscreen = true;
        newIframe.src = `https://www.youtube.com/embed/${videoId}?autoplay=1&rel=0&enablejsapi=1&origin=${window.location.origin}`;
        
        // When iframe loads successfully
        newIframe.onload = function() {
          clearTimeout(window.videoLoadTimeout);
          newIframe.dataset.loaded = true;
          console.log("Video loaded successfully");
        };
        
        // Replace loading indicator with iframe when ready
        setTimeout(() => {
          videoContainer.innerHTML = '';
          videoContainer.appendChild(newIframe);
        }, 1000);
        
        // Set the video title
        if (videoTitle) {
          videoTitle.textContent = decodeURIComponent(title);
        }
        
        // Display the modal
        document.getElementById('videoPlayerModal').style.display = 'block';
        
        // Disable body scrolling when modal is open
        document.body.style.overflow = 'hidden';
      } catch (error) {
        console.error("Error opening video modal:", error);
        showError("There was an error loading the video player. Please try again.");
      }
    }
    
    function closeVideoModal() {
      try {
        // Clear any timeout
        if (window.videoLoadTimeout) {
          clearTimeout(window.videoLoadTimeout);
        }
        
        const videoContainer = document.querySelector('.video-container');
        if (videoContainer) {
          videoContainer.innerHTML = '';
        }
        
        // Hide the modal
        const modal = document.getElementById('videoPlayerModal');
        if (modal) {
          modal.style.display = 'none';
        }
        
        // Re-enable body scrolling
        document.body.style.overflow = 'auto';
      } catch (error) {
        console.error("Error closing video modal:", error);
      }
    }    // Fix the updateSelectedRangeDisplay function
    function updateSelectedRangeDisplay() {
      const startMin = Math.floor(timeRangeStart / 60);
      const startSec = Math.round(timeRangeStart % 60);
      const endMin = Math.floor(timeRangeEnd / 60);
      const endSec = Math.round(timeRangeEnd % 60);
      
      // Get the range display element
      const rangeText = document.getElementById('selectedRange');
      if (rangeText) {
        // Format time string
        rangeText.textContent = `${startMin}:${startSec < 10 ? '0' + startSec : startSec} - ${endMin}:${endSec < 10 ? '0' + endSec : endSec}`;
      }
    }
    
    // Time range modal functions
    function openTimeRangeModal(videoId, title) {
      selectedVideoId = videoId;
      selectedTitle = title;
      
      document.getElementById('timeRangeModal').style.display = 'flex';
      document.body.style.overflow = 'hidden';
      
      // Initialize the slider if it's not already initialized
      if (!window.timeSlider) {
        initTimeRangeSlider();
      } else {
        // Reset the slider to default values
        window.timeSlider.set([timeRangeStart, timeRangeEnd]);
        updateSelectedRangeDisplay();
      }
    }
    
    function closeTimeRangeModal() {
      document.getElementById('timeRangeModal').style.display = 'none';
      document.body.style.overflow = 'auto';
    }    // Confirm time range and navigate to camera page
    function confirmTimeRange() {
      // Get selected video ID and title
      if (selectedVideoId) {
        console.log("Confirm button clicked. Redirecting to camera page...");

        // Store time range in localStorage for camera.ejs to access
        localStorage.setItem('selectedTimeRange', JSON.stringify({
          videoId: selectedVideoId,
          title: selectedTitle,
          startTime: timeRangeStart,
          endTime: timeRangeEnd
        }));

        // Close the modal
        closeTimeRangeModal();

        // Redirect to the camera page with query parameters
        const range = `${timeRangeStart}-${timeRangeEnd}`;
        window.location.href = `/camera?videoId=${selectedVideoId}&range=${range}`;
      } else {
        console.error("No video ID selected");
        showError("Please select a choreography first.");
      }
    }
    
    // Initialize time range slider
    function initTimeRangeSlider() {
      const timeSlider = document.getElementById('timeRangeSlider');
      
      if (timeSlider) {
        if (typeof noUiSlider !== 'undefined') {
          window.timeSlider = noUiSlider.create(timeSlider, {
            start: [timeRangeStart, timeRangeEnd],
            connect: true,
            step: 1,
            range: {
              'min': 0,
              'max': 180 // 3 minutes in seconds
            }
          });
            window.timeSlider.on('update', function(values, handle) {
            timeRangeStart = parseInt(values[0]);
            timeRangeEnd = parseInt(values[1]);
            updateSelectedRangeDisplay();
          });
        } else {
          console.error("noUiSlider is not defined. Make sure the library is loaded.");
          showError("Could not initialize the time slider. Please try refreshing the page.");
        }
      }
    }
  </script>
  <script src="/js/choreography-selection.js"></script>
</body>
</html>