<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title><%= title %></title>
  <link rel="stylesheet" href="/styles/main.css">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
  <style>
    @import url('https://fonts.googleapis.com/css2?family=Poppins:wght@400;600;800&family=Righteous&display=swap');
    
    body {
      font-family: 'Poppins', sans-serif;
      background: linear-gradient(45deg, #ff3b5c, #ff713e, #ffb92a, #5f8fff, #7d4cdb);
      background-size: 400% 400%;
      animation: gradientBG 15s ease infinite;
      color: #fff;
      margin: 0;
      padding: 0;
      min-height: 100vh;
    }
    
    @keyframes gradientBG {
      0% { background-position: 0% 50% }
      50% { background-position: 100% 50% }
      100% { background-position: 0% 50% }
    }
    
    .container {
      max-width: 1200px;
      margin: 0 auto;
      padding: 20px;
    }
    
    header {
      text-align: center;
      padding: 30px 0;
    }
    
    h1 {
      font-family: 'Righteous', cursive;
      font-size: 3rem;
      margin-bottom: 10px;
      color: #fff;
      text-shadow: 3px 3px 0px rgba(0, 0, 0, 0.2);
    }
    
    p.subtitle {
      font-size: 1.2rem;
      margin-bottom: 30px;
      opacity: 0.9;
    }
    
    .search-section {
      background: rgba(0, 0, 0, 0.6);
      padding: 30px;
      border-radius: 15px;
      backdrop-filter: blur(10px);
      margin-bottom: 40px;
      box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);
      border: 1px solid rgba(255, 255, 255, 0.1);
      text-align: center;
    }
    
    .search-container {
      display: flex;
      max-width: 600px;
      margin: 0 auto;
      overflow: hidden;
      border-radius: 50px;
      box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
    }
    
    .search-container input {
      flex-grow: 1;
      padding: 15px 25px;
      font-size: 16px;
      border: none;
      outline: none;
      font-family: 'Poppins', sans-serif;
      background: rgba(255, 255, 255, 0.9);
    }
    
    .search-container button {
      padding: 0 25px;
      background: linear-gradient(45deg, #ff3b5c, #ff713e);
      color: white;
      font-weight: bold;
      border: none;
      cursor: pointer;
      font-family: 'Poppins', sans-serif;
      transition: all 0.3s ease;
    }
    
    .search-container button:hover {
      background: linear-gradient(45deg, #ff713e, #ffb92a);
    }
    
    .trending-tags {
      display: flex;
      flex-wrap: wrap;
      justify-content: center;
      gap: 10px;
      margin: 20px 0;
    }
    
    .trending-tag {
      background: rgba(255, 255, 255, 0.2);
      padding: 8px 15px;
      border-radius: 20px;
      font-size: 14px;
      cursor: pointer;
      transition: all 0.3s ease;
      border: 1px solid rgba(255, 255, 255, 0.3);
    }
    
    .trending-tag:hover {
      background: rgba(255, 255, 255, 0.3);
      transform: translateY(-3px);
    }
    
    .songs-container {
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(240px, 1fr));
      gap: 25px;
      margin: 20px auto;
      animation: fadeIn 0.6s ease-out;
    }
    
    @keyframes fadeIn {
      from { opacity: 0; transform: translateY(20px); }
      to { opacity: 1; transform: translateY(0); }
    }
    
    .song-card {
      background: rgba(0, 0, 0, 0.6);
      border-radius: 15px;
      overflow: hidden;
      transition: all 0.3s ease;
      backdrop-filter: blur(10px);
      border: 1px solid rgba(255, 255, 255, 0.1);
      box-shadow: 0 8px 20px rgba(0, 0, 0, 0.2);
      display: flex;
      flex-direction: column;
      height: 100%;
    }
    
    .song-card:hover {
      transform: translateY(-10px);
      box-shadow: 0 15px 30px rgba(0, 0, 0, 0.3);
      border-color: rgba(255, 255, 255, 0.3);
    }
    
    .album-art {
      width: 100%;
      aspect-ratio: 1/1;
      object-fit: cover;
      transition: transform 0.5s ease;
    }
    
    .song-card:hover .album-art {
      transform: scale(1.05);
    }
    
    .song-info {
      padding: 20px;
      display: flex;
      flex-direction: column;
      flex-grow: 1;
    }
    
    .song-title {
      font-weight: 600;
      font-size: 1.1rem;
      margin-bottom: 5px;
      color: #fff;
      display: -webkit-box;
      -webkit-line-clamp: 2;
      line-clamp: 2;
      -webkit-box-orient: vertical;
      overflow: hidden;
    }
    
    .song-artist {
      color: #ccc;
      font-size: 0.9rem;
      margin-bottom: 15px;
      display: -webkit-box;
      -webkit-line-clamp: 1;
      line-clamp: 1;
      line-clamp: 1;
      -webkit-box-orient: vertical;
      overflow: hidden;
    }
    
    .song-album {
      color: #999;
      font-size: 0.8rem;
      margin-bottom: 15px;
      display: -webkit-box;
      -webkit-line-clamp: 1;
      -webkit-box-orient: vertical;
      overflow: hidden;
    }
    
    .song-actions {
      margin-top: auto;
      display: flex;
      gap: 10px;
    }
    
    .btn {
      padding: 10px 0;
      border-radius: 30px;
      text-decoration: none;
      font-weight: 600;
      font-size: 0.9rem;
      display: inline-flex;
      align-items: center;
      justify-content: center;
      flex: 1;
      transition: all 0.3s ease;
      position: relative;
      overflow: hidden;
      cursor: pointer;
      border: none;
    }
    
    .btn i {
      margin-right: 5px;
    }
    
    .btn-listen {
      background: rgba(255, 255, 255, 0.1);
      color: #fff;
    }
    
    .btn-learn {
      background: linear-gradient(45deg, #ff3b5c, #ff713e);
      color: #fff;
    }
    
    .btn:hover {
      transform: translateY(-3px);
      box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
    }
    
    .btn:before {
      content: '';
      position: absolute;
      top: 0;
      left: -100%;
      width: 100%;
      height: 100%;
      background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
      transition: all 0.4s;
    }
    
    .btn:hover:before {
      left: 100%;
    }
    
    .popularity-bar {
      height: 4px;
      background: rgba(255, 255, 255, 0.1);
      margin: 10px 0;
      border-radius: 2px;
      overflow: hidden;
    }
    
    .popularity-fill {
      height: 100%;
      background: linear-gradient(to right, #ff3b5c, #ff713e);
      border-radius: 2px;
    }
    
    .pagination {
      display: flex;
      justify-content: center;
      gap: 15px;
      margin-top: 30px;
    }
    
    .pagination a {
      display: inline-block;
      padding: 10px 20px;
      background: rgba(255, 255, 255, 0.2);
      color: #fff;
      border-radius: 30px;
      text-decoration: none;
      transition: all 0.3s ease;
    }
    
    .pagination a:hover {
      background: rgba(255, 255, 255, 0.3);
      transform: translateY(-3px);
    }
    
    .pagination a.disabled {
      opacity: 0.5;
      cursor: not-allowed;
    }
    
    .music-notes {
      position: fixed;
      bottom: 0;
      left: 0;
      width: 100%;
      height: 150px;
      overflow: hidden;
      z-index: -1;
      opacity: 0.2;
    }
    
    .note {
      position: absolute;
      bottom: -20px;
      font-size: 2rem;
      color: white;
      animation: floatUp 10s linear infinite;
    }
    
    @keyframes floatUp {
      0% { transform: translateY(0) rotate(0deg); opacity: 0; }
      10% { opacity: 1; }
      90% { opacity: 1; }
      100% { transform: translateY(-100vh) rotate(360deg); opacity: 0; }
    }
    
    .no-songs {
      background: rgba(0, 0, 0, 0.6);
      padding: 30px;
      border-radius: 15px;
      text-align: center;
      backdrop-filter: blur(10px);
      margin: 40px auto;
      max-width: 500px;
      box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);
      border: 1px solid rgba(255, 255, 255, 0.1);
    }
    
    .pulse {
      animation: pulse 2s infinite;
    }
    
    @keyframes pulse {
      0% { transform: scale(1); }
      50% { transform: scale(1.05); }
      100% { transform: scale(1); }
    }
    
    .back-home {
      display: inline-block;
      margin-top: 30px;
      padding: 10px 20px;
      color: white;
      background: rgba(0, 0, 0, 0.3);
      border-radius: 30px;
      text-decoration: none;
      font-size: 16px;
      transition: all 0.3s ease;
    }
    
    .back-home:hover {
      background: rgba(0, 0, 0, 0.5);
      transform: translateX(-5px);
    }
    
    .back-home i {
      margin-right: 5px;
    }
    
    .audio-preview {
      width: 100%;
      margin-top: 10px;
      height: 30px;
      opacity: 0.8;
      transition: opacity 0.3s ease;
    }
    
    .audio-preview:hover {
      opacity: 1;
    }
    
    /* For browsers that don't support HTML5 audio styling */
    audio::-webkit-media-controls-panel {
      background: rgba(255, 255, 255, 0.2);
    }
    
    @media (max-width: 768px) {
      .songs-container {
        grid-template-columns: repeat(auto-fill, minmax(160px, 1fr));
        gap: 15px;
      }
      
      h1 {
        font-size: 2.5rem;
      }
      
      .song-info {
        padding: 15px;
      }
      
      .song-title {
        font-size: 0.9rem;
      }
      
      .song-artist, .song-album {
        font-size: 0.8rem;
      }
      
      .btn {
        font-size: 0.8rem;
        padding: 8px 0;
      }
    }
    
    /* Modal styles */
    .modal {
      position: fixed;
      z-index: 1000;
      left: 0;
      top: 0;
      width: 100%;
      height: 100%;
      overflow: auto;
      background-color: rgb(0,0,0);
      background-color: rgba(0,0,0,0.4);
      display: none;
    }
    
    .modal-content {
      background-color: #fefefe;
      margin: 15% auto;
      padding: 20px;
      border: 1px solid #888;
      width: 80%;
      max-width: 600px;
      border-radius: 10px;
      position: relative;
      animation: slideIn 0.4s ease-out;
    }
    
    @keyframes slideIn {
      from { opacity: 0; transform: translateY(-10px); }
      to { opacity: 1; transform: translateY(0); }
    }
    
    .close {
      color: #aaa;
      float: right;
      font-size: 28px;
      font-weight: bold;
      cursor: pointer;
    }
    
    .close:hover,
    .close:focus {
      color: black;
      text-decoration: none;
      cursor: pointer;
    }
    
    .song-item {
      display: flex;
      align-items: center;
      padding: 10px;
      border-bottom: 1px solid #ddd;
    }
    
    .song-item:last-child {
      border-bottom: none;
    }
    
    .song-item img {
      width: 50px;
      height: 50px;
      border-radius: 5px;
      margin-right: 10px;
    }
    
    .song-item h3 {
      font-size: 1rem;
      margin: 0;
      color: #333;
    }
    
    .song-item p {
      margin: 5px 0;
      color: #666;
      font-size: 0.9rem;
    }
    
    .song-item button {
      background: linear-gradient(45deg, #ff3b5c, #ff713e);
      color: white;
      border: none;
      padding: 8px 15px;
      border-radius: 5px;
      cursor: pointer;
      transition: background 0.3s ease;
      font-size: 0.9rem;
    }
    
    .song-item button:hover {
      background: linear-gradient(45deg, #ff713e, #ffb92a);
    }

    /* Modal for Spotify Search */
    #spotifySearchModal {
      display: none;
      position: fixed;
      z-index: 1000;
      left: 0;
      top: 0;
      width: 100%;
      height: 100%;
      overflow: auto;
      background-color: rgba(0, 0, 0, 0.8);
      backdrop-filter: blur(5px);
    }

    .modal-content {
      background-color: rgba(20, 20, 20, 0.9);
      color: #fff;
      margin: 10% auto;
      padding: 25px;
      border: 1px solid rgba(255, 255, 255, 0.2);
      width: 90%;
      max-width: 700px;
      border-radius: 15px;
      box-shadow: 0 10px 30px rgba(0, 0, 0, 0.5);
      position: relative;
      animation: slideInModal 0.5s ease-out;
    }

    @keyframes slideInModal {
      from { opacity: 0; transform: translateY(-30px) scale(0.95); }
      to { opacity: 1; transform: translateY(0) scale(1); }
    }

    .close-modal-btn {
      color: #ccc;
      float: right;
      font-size: 30px;
      font-weight: bold;
      cursor: pointer;
    }

    .close-modal-btn:hover {
      color: #fff;
    }

    .modal-song-item {
      display: flex;
      align-items: center;
      padding: 12px 8px;
      border-bottom: 1px solid rgba(255, 255, 255, 0.1);
      transition: background-color 0.2s ease;
    }

    .modal-song-item:last-child {
      border-bottom: none;
    }

    .modal-song-item:hover {
      background-color: rgba(255, 255, 255, 0.05);
    }

    .modal-song-item img {
      width: 50px;
      height: 50px;
      border-radius: 5px;
      margin-right: 15px;
      object-fit: cover;
    }

    .modal-song-item-info {
      flex-grow: 1;
    }

    .modal-song-item-info strong {
      font-size: 1rem;
      display: block;
      margin-bottom: 3px;
      color: #fff;
    }

    .modal-song-item-info span {
      font-size: 0.85rem;
      color: #bbb;
    }

    .modal-song-item .btn-select-modal {
      padding: 8px 15px;
      background: linear-gradient(45deg, #1DB954, #1AA34A);
      color: white;
      border-radius: 20px;
      text-decoration: none;
      font-weight: 600;
      font-size: 0.8rem;
      transition: all 0.3s ease;
      white-space: nowrap;
    }

    .modal-song-item .btn-select-modal:hover {
      transform: scale(1.05);
      box-shadow: 0 4px 10px rgba(0, 0, 0, 0.3);
    }

    /* Hide the modal by default */
    #spotifySearchModal {
      display: none;
    }
  </style>
</head>
<body>
  <div class="container">
    <header>
      <h1>Dance Song Library</h1>
      <p class="subtitle">Find the perfect track to dance to and learn new moves!</p>
    </header>
    
    <section class="search-section">
      <form action="/songs" method="GET">
        <div class="search-container">
          <input 
            type="text" 
            name="query" 
            placeholder="Search for songs..." 
            value="<%= typeof query !== 'undefined' ? query : '' %>"
            required
          >
          <button type="submit"><i class="fas fa-search"></i> Search</button>
        </div>
      </form>
      
      <div class="trending-tags">
        <div class="trending-tag" onclick="searchTag('pop dance')">Pop</div>
        <div class="trending-tag" onclick="searchTag('hip hop')">Hip Hop</div>
        <div class="trending-tag" onclick="searchTag('kpop')">K-Pop</div>
        <div class="trending-tag" onclick="searchTag('latin')">Latin</div>
        <div class="trending-tag" onclick="searchTag('bollywood')">Bollywood</div>
        <div class="trending-tag" onclick="searchTag('top hit songs')">Top Hits</div>
      </div>
    </section>
    
    <% if (typeof error !== 'undefined' && error) { %>
      <div class="no-songs">
        <i class="fas fa-exclamation-circle pulse" style="font-size: 3rem; margin-bottom: 20px; color: #ff3b5c;"></i>
        <h3><%= error %></h3>
      </div>
    <% } else if (songs && songs.length > 0) { %>
      <div class="songs-container">
        <% songs.forEach(song => { %>
          <div class="song-card">            <img 
              src="<%= song.albumArt || (typeof defaultImageUrl !== 'undefined' ? defaultImageUrl : 'https://via.placeholder.com/300x300?text=No+Image') %>" 
              alt="<%= song.title %>" 
              class="album-art"
              onerror="this.src='<%= typeof defaultImageUrl !== 'undefined' ? defaultImageUrl : 'https://via.placeholder.com/300x300?text=No+Image' %>'"
            >
            <div class="song-info">
              <div class="song-title"><%= song.title %></div>
              <div class="song-artist"><%= song.artist %></div>
              <div class="song-album"><%= song.album %></div>
              
              <div class="popularity-bar">
                <div class="popularity-fill" style="width: <%= (typeof song.popularity !== 'undefined' && song.popularity !== null ? Number(song.popularity) : 0) %>%;"></div>
              </div>
              
              <% if (song.previewUrl) { %>
                <audio controls class="audio-preview">
                  <source src="<%= song.previewUrl %>" type="audio/mpeg">
                  Your browser does not support the audio element.
                </audio>
              <% } %>
              
              <div class="song-actions">                <a href="<%= song.spotifyUrl %>" target="_blank" class="btn btn-listen">
                  <i class="fab fa-spotify"></i> Listen
                </a>
                <a href="/songs/choreographies?songTitle=<%= encodeURIComponent(song.title) %>&artist=<%= encodeURIComponent(song.artist) %>" class="btn btn-learn">
                  <i class="fas fa-play"></i> Learn
                </a>
              </div>
            </div>
          </div>
        <% }); %>
      </div>
      
      <div class="pagination">
        <% if (typeof previousPage !== 'undefined' && previousPage) { %>
          <a href="/songs?page=<%= previousPage %>&query=<%= encodeURIComponent(typeof query !== 'undefined' ? query : '') %>">
            <i class="fas fa-chevron-left"></i> Previous
          </a>
        <% } else { %>
          <a class="disabled"><i class="fas fa-chevron-left"></i> Previous</a>
        <% } %>
        
        <% if (typeof nextPage !== 'undefined' && nextPage) { %>
          <a href="/songs?page=<%= nextPage %>&query=<%= encodeURIComponent(typeof query !== 'undefined' ? query : '') %>">
            Next <i class="fas fa-chevron-right"></i>
          </a>
        <% } else { %>
          <a class="disabled">Next <i class="fas fa-chevron-right"></i></a>
        <% } %>
      </div>
    <% } else { %>
      <div class="no-songs">
        <i class="fas fa-music pulse" style="font-size: 3rem; margin-bottom: 20px;"></i>
        <h3>No songs found!</h3>
        <p>Try searching for a different song or check out the trending tags.</p>
      </div>
    <% } %>
    
    <a href="/" class="back-home">
      <i class="fas fa-arrow-left"></i> Back to Home
    </a>
  </div>
  
  <!-- Animated music notes -->
  <div class="music-notes">
    <% for (let i = 1; i <= 10; i++) { %>
      <div class="note" style="
        left: <%= Math.random() * 100 %>%; 
        animation-duration: <%= 5 + Math.random() * 8 %>s; 
        animation-delay: <%= Math.random() * 5 %>s;
      ">
        <% const notes = ['♪', '♫', '♬', '♩']; %>
        <%= notes[Math.floor(Math.random() * notes.length)] %>
      </div>
    <% } %>
  </div>
  
  <!-- Add a modal for song selection -->
  <div id="songSelectionModal" class="modal" style="display: none;">
    <div class="modal-content">
      <span class="close" onclick="closeModal()">&times;</span>
      <h2>Select a Song from Spotify</h2>
      <div id="spotifySongsContainer">
        <!-- Songs will be dynamically loaded here -->
      </div>
    </div>
  </div>

  <!-- Modal for Spotify Search -->
  <div id="spotifySearchModal" class="modal" style="display: none; position: fixed; z-index: 1000; left: 0; top: 0; width: 100%; height: 100%; overflow: auto; background-color: rgba(0,0,0,0.6); backdrop-filter: blur(5px);">
    <div class="modal-content" style="background-color: rgba(20, 20, 20, 0.9); color: #fff; margin: 10% auto; padding: 25px; border: 1px solid rgba(255,255,255,0.2); width: 90%; max-width: 700px; border-radius: 15px; box-shadow: 0 10px 30px rgba(0,0,0,0.5); position: relative; animation: slideInModal 0.5s ease-out;">
      <span class="close-modal-btn" onclick="closeSpotifySearchModal()" style="color: #ccc; float: right; font-size: 30px; font-weight: bold; cursor: pointer;">&times;</span>
      <h2 style="font-family: 'Righteous', cursive; color: #fff; margin-bottom: 20px;">Search for a Song on Spotify</h2>
      <div style="display: flex; gap: 10px; margin-bottom: 20px;">
        <input type="text" id="modalSpotifySearchInput" placeholder="Enter song title, artist, or album..." style="flex-grow: 1; padding: 12px 18px; font-size: 16px; border-radius: 25px; border: 1px solid rgba(255,255,255,0.3); background: rgba(255,255,255,0.1); color: #fff; outline: none;">
        <button onclick="performSpotifyModalSearch()" class="btn" style="background: linear-gradient(45deg, #ff3b5c, #ff713e); color: #fff; border-radius: 25px; padding: 0 25px;"><i class="fas fa-search"></i> Search</button>
      </div>
      <div id="modalSpotifySongsContainer" style="max-height: 45vh; overflow-y: auto; padding-right: 10px;">
        <p style="text-align: center; opacity: 0.7;">Search for songs to see results here.</p>
      </div>
    </div>
  </div>

  <script>
    function searchTag(tag) {
      window.location.href = `/songs?query=${encodeURIComponent(tag)}`;
    }
    
    // Add animation to song cards as they appear in viewport
    document.addEventListener('DOMContentLoaded', function() {
      const songCards = document.querySelectorAll('.song-card');
      
      const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
          if (entry.isIntersecting) {
            entry.target.style.opacity = 1;
            entry.target.style.transform = 'translateY(0)';
          }
        });
      }, { threshold: 0.1 });
      
      songCards.forEach((card, index) => {
        card.style.opacity = 0;
        card.style.transform = 'translateY(20px)';
        card.style.transition = `opacity 0.6s ease-out ${index * 0.1}s, transform 0.6s ease-out ${index * 0.1}s`;
        observer.observe(card);
      });
    });
    
    function openModal() {
      document.getElementById('songSelectionModal').style.display = 'block';
      fetchSpotifySongs();
    }

    function closeModal() {
      document.getElementById('songSelectionModal').style.display = 'none';
    }

    async function fetchSpotifySongs() {
      const response = await fetch('/songs');
      const data = await response.json();
      const container = document.getElementById('spotifySongsContainer');
      container.innerHTML = '';

      data.songs.forEach(song => {
        const songElement = document.createElement('div');
        songElement.className = 'song-item';
        songElement.innerHTML = `
          <img src="${song.albumArt}" alt="${song.title}" class="album-art">
          <div>
            <h3>${song.title}</h3>
            <p>${song.artist}</p>
            <button onclick="selectSong('${song.title}', '${song.artist}')">Select</button>
          </div>
        `;
        container.appendChild(songElement);
      });
    }

    function selectSong(title, artist) {
      window.location.href = `/songs/choreographies?songTitle=${encodeURIComponent(title)}&artist=${encodeURIComponent(artist)}`;
    }

    function openSpotifySearchModal(originalTitle, originalArtist) {
      document.getElementById('spotifySearchModal').style.display = 'block';
      const searchInput = document.getElementById('modalSpotifySearchInput');
      // Pre-fill search with the song from the card, if available, as a starting point
      if (originalTitle) {
        searchInput.value = originalTitle + (originalArtist ? ' ' + originalArtist : '');
        performSpotifyModalSearch(); // Optionally perform search immediately
      } else {
        searchInput.value = ''; // Clear previous search
        document.getElementById('modalSpotifySongsContainer').innerHTML = '<p style="text-align: center; opacity: 0.7;">Search for songs to see results here.</p>';
      }
    }

    function closeSpotifySearchModal() {
      document.getElementById('spotifySearchModal').style.display = 'none';
    }

    async function performSpotifyModalSearch() {
      const query = document.getElementById('modalSpotifySearchInput').value.trim();
      const songsContainer = document.getElementById('modalSpotifySongsContainer');
      
      if (!query) {
        songsContainer.innerHTML = '<p style="text-align: center; opacity: 0.7;">Please enter a song, artist, or album to search.</p>';
        return;
      }
      
      songsContainer.innerHTML = '<p style="text-align: center; opacity: 0.7;">Loading songs from Spotify...</p>';

      try {
        const response = await fetch(`/api/spotify-search?searchQuery=${encodeURIComponent(query)}`);
        if (!response.ok) {
          const errorData = await response.json().catch(() => ({ error: "Failed to parse error response from server." }));
          throw new Error(errorData.error || `Server error: ${response.status}`);
        }
        const data = await response.json();
        
        songsContainer.innerHTML = ''; // Clear loading/previous results
        if (data.songs && data.songs.length > 0) {
          data.songs.forEach(song => {
            const songElement = document.createElement('div');
            songElement.className = 'modal-song-item';
            songElement.innerHTML = `
              <img src="\${song.albumArt || 'https://via.placeholder.com/50x50?text=No+Art'}" alt="\${song.title}">
              <div class="modal-song-item-info">
                <strong>\${song.title}</strong>
                <span>\${song.artist}</span>
              </div>
              <a href="/songs/choreographies?songTitle=\${encodeURIComponent(song.title)}&artist=\${encodeURIComponent(song.artist)}" class="btn-select-modal">
                <i class="fas fa-chalkboard-teacher"></i> Select & Learn
              </a>
            `;
            songsContainer.appendChild(songElement);
          });
        } else {
          songsContainer.innerHTML = '<p style="text-align: center; opacity: 0.7;">No songs found on Spotify for "<strong>\${query}</strong>". Try a different search.</p>';
        }
      } catch (e) {
        console.error("Failed to fetch songs for Spotify modal:", e);
        songsContainer.innerHTML = `<p style="text-align: center; color: #ff713e;">Error loading songs: \${e.message}. Please try again.</p>`;
      }
    }
    
    // Optional: Add event listener for Enter key in modal search input
    const modalSearchInput = document.getElementById('modalSpotifySearchInput');
    if (modalSearchInput) {
        modalSearchInput.addEventListener('keypress', function(e) {
            if (e.key === 'Enter') {
                e.preventDefault(); // Prevent form submission if it's in a form
                performSpotifyModalSearch();
            }
        });
    }
    
    // Close modal if user clicks outside of the modal content
    window.onclick = function(event) {
      const modal = document.getElementById('spotifySearchModal');
      if (event.target == modal) {
        closeSpotifySearchModal();
      }
    }
  </script>
</body>
</html>